What happens when you initialize a repository? Why do you need to do it?
You begin the process of creating metadata - you are telling git you want to keep a track of these files - who changed what and when
Otherwise they just float around with no metadata being tagged

How is the staging area different from the working directory and the repository? What value do you think it offers?
Working directory = All the files you're working on
Repository = All the files you've committed
Staging area = intermediate area between them - can do incremental commits to group together logical groups of files all related to the same change e.g. bug fix = helps track back any problems
Also helps with memory/processing - commits will be quicker incrementally than all files at once

How can you use the staging area to make sure you have one commit per logical change?
By using git add on a regular basis as you change the different files involved in the logical change, but only using git commit after you've changed all of the files for that change

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Different language versions
New team members not familiar with code - higher risk of breakage
When working on patches while also doing new development work in a master version
Different customer versions
Good for refactoring/performance improvements

How do the diagrams help you visualize the branch structure?
Trace lines/parentage - which commits made it into which branch
See a range of commits across different branches - spot points of convergence and points of divergence
Quickly see how different a branch is - how many commits between branches
